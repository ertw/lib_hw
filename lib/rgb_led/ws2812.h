/**
 * @file ws2812.h
 * @brief WS2812 RGB LED driver for Raspberry Pi Pico
 * 
 * This driver provides functions to control WS2812 addressable RGB LEDs
 * using the Raspberry Pi Pico's PIO state machines.
 */

#ifndef PICO_HW_WS2812_H
#define PICO_HW_WS2812_H

#include "pico/stdlib.h"
#include "hardware/pio.h"
// pio_ws2812.pio.h is generated by CMake and automatically included

// =============================================================================
// Type Definitions
// =============================================================================

/** WS2812 LED configuration structure */
typedef struct {
    PIO pio;               ///< PIO instance (pio0 or pio1)
    uint sm;               ///< State machine number (0-3)
    uint data_pin;         ///< Data pin number
    uint num_pixels;       ///< Number of WS2812 LEDs in chain
} hw_ws2812_config_t;

/** WS2812 LED handle structure */
typedef struct {
    const hw_ws2812_config_t *config;  ///< Configuration
    uint32_t *pixels;                  ///< Pixel buffer
    bool initialized;                   ///< Initialization state
} hw_ws2812_t;

// =============================================================================
// API Functions
// =============================================================================

/**
 * @brief Initialize WS2812 LED driver
 * 
 * @param ws Handle to WS2812 instance
 * @param config Configuration parameters
 * @return hw_result_t Operation result
 */
hw_result_t hw_ws2812_init(hw_ws2812_t *ws, const hw_ws2812_config_t *config);

/**
 * @brief Set RGB color for specific pixel
 * 
 * @param ws Handle to WS2812 instance
 * @param index Pixel index (0 to num_pixels-1)
 * @param r Red component (0-255)
 * @param g Green component (0-255)
 * @param b Blue component (0-255)
 * @return hw_result_t Operation result
 */
hw_result_t hw_ws2812_set_pixel(hw_ws2812_t *ws, uint index, uint8_t r, uint8_t g, uint8_t b);

/**
 * @brief Set same RGB color for all pixels
 * 
 * @param ws Handle to WS2812 instance
 * @param r Red component (0-255)
 * @param g Green component (0-255)
 * @param b Blue component (0-255)
 * @return hw_result_t Operation result
 */
hw_result_t hw_ws2812_set_all(hw_ws2812_t *ws, uint8_t r, uint8_t g, uint8_t b);

/**
 * @brief Show pixels (transmit colors to LEDs)
 * 
 * @param ws Handle to WS2812 instance
 * @return hw_result_t Operation result
 */
hw_result_t hw_ws2812_show(hw_ws2812_t *ws);

/**
 * @brief Clear all pixels (set to black/off)
 * 
 * @param ws Handle to WS2812 instance
 * @return hw_result_t Operation result
 */
hw_result_t hw_ws2812_clear(hw_ws2812_t *ws);

#endif // PICO_HW_WS2812_H